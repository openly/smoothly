// Generated by CoffeeScript 1.7.1
(function() {
  var APICall, APIRequestMethod, qs;

  qs = require('querystring');

  APIRequestMethod = require('./req_methods');

  APICall = (function() {
    var deleteCall, getCall, headCall, postCall, putCall;

    function APICall(backend, method, path) {
      var _ref;
      _ref = [backend, method, path], this.backend = _ref[0], this.method = _ref[1], this.path = _ref[2];
    }

    APICall.prototype.exec = function(data, callback) {
      var url;
      url = "" + this.path + "?" + (qs.stringify(data.query));
      url = url.replace(/\?$/, '');
      console.log("" + (this.method.toUpperCase()) + ": " + url);
      if (this.method === APIRequestMethod.GET) {
        getCall.call(this, url, data, callback);
      }
      if (this.method === APIRequestMethod.POST) {
        postCall.call(this, url, data, callback);
      }
      if (this.method === APIRequestMethod.PUT) {
        putCall.call(this, url, data, callback);
      }
      if (this.method === APIRequestMethod.DELETE) {
        deleteCall.call(this, url, data, callback);
      }
      if (this.method === APIRequestMethod.HEAD) {
        return headCall.call(this, url, data, callback);
      }
    };

    getCall = function(url, data, callback) {
      return this.backend.get(url, callback);
    };

    postCall = function(url, data, callback) {
      return this.backend.post(url, data.params, callback);
    };

    putCall = function(url, data, callback) {
      return this.backend.put(url, data.params, callback);
    };

    deleteCall = function(url, data, callback) {
      return this.backend["delete"](url, callback);
    };

    headCall = function(url, data, callback) {
      return this.backend.head(url, callback);
    };

    return APICall;

  })();

  module.exports = APICall;

}).call(this);
